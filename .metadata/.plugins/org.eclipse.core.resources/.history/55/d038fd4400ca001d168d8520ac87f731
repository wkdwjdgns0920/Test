import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	static List<Article> articles = new ArrayList<>();
	static List<Member> members = new ArrayList<>();
	
	static int lastArticleId = 3;
	static int lastMemberId = 3;
	
	public static void main(String[] args) {

		System.out.println("==프로그램 시작==");

		Scanner sc = new Scanner(System.in);

		while (true) {
			System.out.print("명령어>");
			String command = sc.nextLine().trim();

			if (command.length() == 0) {
				System.out.println("명령어를 입력해주세요");
			}

			if (command.equals("exit")) {
				break;
			}
			
			if (command.equals("member join")) {
				int id = lastMemberId + 1;
				String loginId = null;
				while (true) {
					System.out.println("로그인 아이디 : ");
					loginId = sc.nextLine();
					
					if(isJoinableLoginId(loginId) == true ) {
						System.out.println("이미 가입된 회원이 있습니다");
						continue;
					}
					break;
				}
				
				String loginPw = null;
				while (true) {
					System.out.println("로그인비밀번호 : ");
					loginPw = sc.nextLine();
					System.out.println("로그인 비밀번호 확인 : ");
					String loginPwConfrim = sc.nextLine();
					
					if(loginPw.equals(loginPwConfrim) == false) {
						System.out.println("비밀번호를 확인해주세요");
						continue;
					}
					break;
				}
				
				System.out.println("이름 : ");
				String name = sc.nextLine();
				
				Member member = new Member(id,loginId, loginPw, name);
				members.add(member);
				System.out.println("회원가입되었습니다");
				lastMemberId++;
				
			} else if (command.equals("member login")) {
				
				System.out.println("로그인 아이디 : ");
				String loginId = sc.nextLine();
				System.out.println("로그인 비밀번호 : ");
				String loginPw = sc.nextLine();
				
				
			} else if (command.equals("article write")) {
				int id = lastArticleId + 1;
				System.out.println("제목 : ");
				String title = sc.nextLine();
				System.out.println("내용 : ");
				String body = sc.nextLine();
				Article article = new Article(id, title, body);
				articles.add(article);

				System.out.printf("%d번 게시글이 작성되었습니다", id);
				lastArticleId++;
			} else if (command.equals("article list")) {
				if (articles.size() == 0) {
					System.out.println("게시글이 존제하지 않습니다");
					continue;
				}

				System.err.println("번호  //  제목  //  조회  //  작성자");

				for (int i = articles.size() - 1; i >= 0; i--) {
					Article article = articles.get(i);

					System.out.printf("%d  //  %s\n", article.id, article.title);
				}

			} else if (command.equals("article detail")) {
				String[] cmdDiv = command.split(" ");

				if (cmdDiv.length < 3) {
					System.out.println("명령어를 다시 입력해주세요");
					continue;
				}

				int id = Integer.parseInt(cmdDiv[2]);

				Article foundArticle = getArticle(id);

				if (foundArticle == null) {
					System.out.println("존재하지 않는 게시글입니다");
					continue;
				}

				System.out.printf("번호 : %d\n", foundArticle.id);
				System.out.printf("제목 : %s\n", foundArticle.title);
				System.out.printf("내용 : %s\n", foundArticle.body);
			} else if (command.equals("article modify")) {
				String[] cmdDiv = command.split(" ");

				if (cmdDiv.length < 3) {
					System.out.println("명령어를 다시 입력해주세요");
					continue;
				}

				int id = Integer.parseInt(cmdDiv[2]);

				Article foundArticle = getArticle(id);

				if (foundArticle == null) {
					System.out.println("존재하지 않는 게시글입니다");
					continue;
				}

				System.out.println("새 제목 : ");
				String newTitle = sc.nextLine();
				System.out.println("새 내용 : ");
				String newBody = sc.nextLine();

				foundArticle.title = newTitle;
				foundArticle.body = newBody;

				System.out.printf("%d번 게시글을 수정하였습니다\n", foundArticle.id);

			} else if (command.equals("article delete")) {
				String[] cmdDiv = command.split(" ");

				if (cmdDiv.length < 3) {
					System.out.println("명령어를 다시 입력해주세요");
					continue;
				}

				int id = Integer.parseInt(cmdDiv[2]);

				Article foundArticle = getArticle(id);

				if (foundArticle == null) {
					System.out.println("존재하지 않는 게시글입니다");
					continue;
				}

				articles.remove(foundArticle);
				System.out.printf("%d번 게시글을 삭제하였습니다",foundArticle.id);
			}

		}

	}

	private static boolean isJoinableLoginId(String loginId) {
		int index = getIndexMember(loginId);
		if(index == -1) {
			return false;
		}
		return true;
	}
	
	private static int getIndexMember(String loginId) {
		int i = 0;
		for (Member member : members) {
			if (member.loginId.equals(loginId)) {
				return i;
			}
			i++;
		}
		return -1;
	}

	private static Article getArticle(int id) {
		int index = getArticleIndex(id);
		if (index == -1) {
			return null;
		}
		return articles.get(index);
	}

	private static int getArticleIndex(int id) {
		int i = 0;
		for (Article article : articles) {
			if (article.id == id) {
				return i;
			}
			i++;
		}
		return -1;
	}

}
class Member {
	int id;
	String loginId;
	String loginPw;
	String name;
	
	Member(int id, String loginId, String loginPw, String name) {
		this.id = id;
		this.loginId = loginId;
		this.loginPw = loginPw;
		this.name = name;
	}
}

class Article {
	int id;
	String title;
	String body;

	Article(int id, String title, String body) {
		this.id = id;
		this.title = title;
		this.body = body;
	}
}